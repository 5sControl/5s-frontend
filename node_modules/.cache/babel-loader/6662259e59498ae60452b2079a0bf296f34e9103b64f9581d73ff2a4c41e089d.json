{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/git/reactapp/src/components/algorithmList.jsx\";\nimport { AiOutlineRight } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlgorithmList = _ref => {\n  let {\n    algorithmList,\n    algorithmCount,\n    setSelectType\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"selection__title\",\n      children: \"Initial Setup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"selection__subtitle\",\n      children: \"Select algorithms and cameras that will use them to start monitoring. You can always change your setup by going to the specific algorithms from Algorithms tab.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [algorithmCount, \" / 5 algorithms used \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Ear_protection ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType({\n        obj: camerasSafety_Control_Ear_protection,\n        type: 'camerasSafety_Control_Ear_protection'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Ear protection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing protective headphones.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Staff_Control ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType({\n        obj: camerasStaff_control,\n        type: 'camerasStaff_control'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Staff Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is staff.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Tool_Control ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType({\n        obj: camerasTool_control,\n        type: 'camerasTool_control'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Tool Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects when worker takes tools from the bench.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Head_protection ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Safety_Control_Head_protection'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Head protection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing protective helmet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Hand_protection ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Safety_Control_Hand_protection'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Hand protection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing protective gloves.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Reflective_jacket ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Safety_Control_Reflective_jacket'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Reflective jacket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing reflective jacket.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Idle_Control ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Idle_Control'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Idle Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is idle.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = AlgorithmList;\nvar _c;\n$RefreshReg$(_c, \"AlgorithmList\");","map":{"version":3,"names":["AiOutlineRight","AlgorithmList","algorithmList","algorithmCount","setSelectType","Safety_Control_Ear_protection","obj","camerasSafety_Control_Ear_protection","type","Staff_Control","camerasStaff_control","Tool_Control","camerasTool_control","Safety_Control_Head_protection","Safety_Control_Hand_protection","Safety_Control_Reflective_jacket","Idle_Control"],"sources":["/Users/user/Desktop/git/reactapp/src/components/algorithmList.jsx"],"sourcesContent":["import {AiOutlineRight } from \"react-icons/ai\";\n\nexport const AlgorithmList = ({algorithmList, algorithmCount, setSelectType}) =>{\n    return (\n        <div className='selection'>\n        <h2 className='selection__title'>Initial Setup</h2>\n        <h3 className='selection__subtitle'>Select algorithms and cameras that will use them to start monitoring. You can always change your setup by going to the specific algorithms from Algorithms tab.</h3>\n        <h2>{algorithmCount} / 5 algorithms used </h2>\n        <div className={algorithmList.Safety_Control_Ear_protection ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType({obj:camerasSafety_Control_Ear_protection, type:'camerasSafety_Control_Ear_protection'})}>\n            <div>\n                <h4>Safety Control: Ear protection</h4>\n                <h5>Detects if worker is not wearing protective headphones.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n        <div className={algorithmList.Staff_Control ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType({obj:camerasStaff_control, type:'camerasStaff_control'})}>\n            <div>\n                <h4>Staff Control</h4>\n                <h5>Detects if worker is staff.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n        <div className={algorithmList.Tool_Control ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType({obj:camerasTool_control, type:'camerasTool_control'})}>\n            <div>\n                <h4>Tool Control</h4>\n                <h5>Detects when worker takes tools from the bench.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n        <div className={algorithmList.Safety_Control_Head_protection ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Safety_Control_Head_protection')}>\n            <div>\n                <h4>Safety Control: Head protection</h4>\n                <h5>Detects if worker is not wearing protective helmet.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n        <div className={algorithmList.Safety_Control_Hand_protection ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Safety_Control_Hand_protection')}>\n            <div>\n                <h4>Safety Control: Hand protection</h4>\n                <h5>Detects if worker is not wearing protective gloves.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n        <div className={algorithmList.Safety_Control_Reflective_jacket ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Safety_Control_Reflective_jacket')}>\n            <div>\n                <h4>Safety Control: Reflective jacket</h4>\n                <h5>Detects if worker is not wearing reflective jacket.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n        <div className={algorithmList.Idle_Control ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Idle_Control')}>\n            <div>\n                <h4>Idle Control</h4>\n                <h5>Detects if worker is idle.</h5>\n            </div>\n            <AiOutlineRight/>\n        </div>\n     \n    </div>\n    )\n}"],"mappings":";AAAA,SAAQA,cAAc,QAAQ,gBAAgB;AAAC;AAE/C,OAAO,MAAMC,aAAa,GAAG,QAAmD;EAAA,IAAlD;IAACC,aAAa;IAAEC,cAAc;IAAEC;EAAa,CAAC;EACxE,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBAC1B;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACnD;MAAI,SAAS,EAAC,qBAAqB;MAAA,UAAC;IAA+J;MAAA;MAAA;MAAA;IAAA,QAAK,eACxM;MAAA,WAAKD,cAAc,EAAC,uBAAqB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9C;MAAK,SAAS,EAAED,aAAa,CAACG,6BAA6B,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAMD,aAAa,CAAC;QAACE,GAAG,EAACC,oCAAoC;QAAEC,IAAI,EAAC;MAAsC,CAAC,CAAE;MAAA,wBAC1O;QAAA,wBACI;UAAA,UAAI;QAA8B;UAAA;UAAA;UAAA;QAAA,QAAK,eACvC;UAAA,UAAI;QAAuD;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9D,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAK,SAAS,EAAEN,aAAa,CAACO,aAAa,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAML,aAAa,CAAC;QAACE,GAAG,EAACI,oBAAoB;QAAEF,IAAI,EAAC;MAAsB,CAAC,CAAE;MAAA,wBAC1L;QAAA,wBACI;UAAA,UAAI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,eACtB;UAAA,UAAI;QAA2B;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAK,SAAS,EAAEN,aAAa,CAACS,YAAY,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAMP,aAAa,CAAC;QAACE,GAAG,EAACM,mBAAmB;QAAEJ,IAAI,EAAC;MAAqB,CAAC,CAAE;MAAA,wBACvL;QAAA,wBACI;UAAA,UAAI;QAAY;UAAA;UAAA;UAAA;QAAA,QAAK,eACrB;UAAA,UAAI;QAA+C;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAK,SAAS,EAAEN,aAAa,CAACW,8BAA8B,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAMT,aAAa,CAAC,gCAAgC,CAAE;MAAA,wBACpL;QAAA,wBACI;UAAA,UAAI;QAA+B;UAAA;UAAA;UAAA;QAAA,QAAK,eACxC;UAAA,UAAI;QAAmD;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAK,SAAS,EAAEF,aAAa,CAACY,8BAA8B,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAMV,aAAa,CAAC,gCAAgC,CAAE;MAAA,wBACpL;QAAA,wBACI;UAAA,UAAI;QAA+B;UAAA;UAAA;UAAA;QAAA,QAAK,eACxC;UAAA,UAAI;QAAmD;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAK,SAAS,EAAEF,aAAa,CAACa,gCAAgC,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAMX,aAAa,CAAC,kCAAkC,CAAE;MAAA,wBACxL;QAAA,wBACI;UAAA,UAAI;QAAiC;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1C;UAAA,UAAI;QAAmD;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,eACN;MAAK,SAAS,EAAEF,aAAa,CAACc,YAAY,GAAG,sBAAsB,GAAG,+BAAgC;MAAC,OAAO,EAAE,MAAMZ,aAAa,CAAC,cAAc,CAAE;MAAA,wBAChJ;QAAA,wBACI;UAAA,UAAI;QAAY;UAAA;UAAA;UAAA;QAAA,QAAK,eACrB;UAAA,UAAI;QAA0B;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eACN,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEV,CAAC;AAAA,KA1DYH,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}