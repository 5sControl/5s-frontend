{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/git/reactapp/src/pages/company/Company/Company.jsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useState } from 'react';\nimport './Company.scss';\nimport { proxy } from '../../../api/proxy';\nimport { API_USERLIST } from '../../../api/api';\nimport { useCookies } from \"react-cookie\";\nimport { AddUser } from './components/addUser';\nimport axios from 'axios';\nimport { getIsInternet } from '../../../functions/getURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CompanyComponent = () => {\n  _s();\n  const [cookies, setCookie, removeCookie] = useCookies(['token']);\n  const [userList, setUserList] = useState([]);\n  const [isAddAccount, setIsAddAccount] = useState(false);\n  console.log(process);\n  useEffect(() => {\n    if (getIsInternet(window.location.host)) {\n      proxy(API_USERLIST, \"GET\", {\n        'Authorization': cookies.token\n      }).then(res => {\n        console.log(res.data);\n        if (res.data.detail !== 'Authentication credentials were not provided.' && res.data.detail !== 'Given token not valid for any token type') {\n          setUserList(res.data.results);\n        } else {\n          removeCookie('token');\n        }\n      });\n    } else {\n      axios.get(API_USERLIST, {\n        headers: {\n          'Authorization': cookies.token\n        }\n      }).then(res => {\n        console.log(res.data.results);\n        if (res.data.detail !== 'Authentication credentials were not provided.' && res.data.detail !== 'Given token not valid for any token type') {\n          setUserList(res.data.results);\n        } else {\n          removeCookie('token');\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company__name\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Taqtile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company__accounts_tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"company__add\",\n          onClick: () => setIsAddAccount(true),\n          children: \"+ Add Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company__accounts_container\",\n        children: userList.map(user => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"company__user\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), user.id === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"company__user_owner\",\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"company__user_worker\",\n              children: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), isAddAccount && /*#__PURE__*/_jsxDEV(AddUser, {\n        close: () => {\n          setIsAddAccount(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CompanyComponent, \"gBvbjAx5fc4zWOaQ87BM7iIh8SM=\", false, function () {\n  return [useCookies];\n});\n_c = CompanyComponent;\nvar _c;\n$RefreshReg$(_c, \"CompanyComponent\");","map":{"version":3,"names":["Fragment","useEffect","useState","proxy","API_USERLIST","useCookies","AddUser","axios","getIsInternet","CompanyComponent","cookies","setCookie","removeCookie","userList","setUserList","isAddAccount","setIsAddAccount","console","log","process","window","location","host","token","then","res","data","detail","results","get","headers","length","map","user","username","id"],"sources":["/Users/user/Desktop/git/reactapp/src/pages/company/Company/Company.jsx"],"sourcesContent":["import { Fragment, useEffect, useState } from 'react'\nimport './Company.scss'\nimport { proxy } from '../../../api/proxy'\nimport { API_USERLIST } from '../../../api/api'\n\nimport { useCookies } from \"react-cookie\"\nimport { AddUser } from './components/addUser'\nimport axios from 'axios'\nimport { getIsInternet } from '../../../functions/getURL'\n\nexport const CompanyComponent = () =>{\n\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n\n    const [userList, setUserList] = useState([]);\n    const [isAddAccount, setIsAddAccount] = useState(false);\n\n    console.log(process)\n    useEffect(() =>{\n       if (getIsInternet(window.location.host)) {\n        proxy(API_USERLIST, \"GET\", {\n            'Authorization': cookies.token\n          })\n          .then(res => {\n            console.log(res.data)\n            if (res.data.detail !=='Authentication credentials were not provided.' && res.data.detail!== 'Given token not valid for any token type') {\n                setUserList(res.data.results)\n            }\n            else{\n                removeCookie('token')\n            }\n        })\n       }\n       else{\n        axios.get(API_USERLIST,{\n                headers: {\n                'Authorization': cookies.token\n                },\n            })\n            .then(res => {\n                console.log(res.data.results)\n                if (res.data.detail !=='Authentication credentials were not provided.' && res.data.detail!== 'Given token not valid for any token type') {\n                    setUserList(res.data.results)\n                }\n                else{\n                    removeCookie('token')\n                }\n            })\n       }\n    },[])\n\n    return(\n    <>\n        {userList.length > 0 && \n        <div className='company'>\n            <h2>Company</h2>\n            <div className='company__name'>\n                <h3>Taqtile</h3>\n            </div>\n            <div className='company__accounts_tab'>\n                <h2>Accounts</h2>\n                <button className='company__add' onClick={() => setIsAddAccount(true)}>+ Add Account</button>\n            </div>\n\n            <div className='company__accounts_container'>\n                {userList.map((user) => \n                <Fragment key={user.id}>\n                    <div className='company__user'>\n                        <span>{user.username}</span>\n                        {user.id === 1 ?\n                        <div className='company__user_owner'>Owner</div>\n                        :\n                        <div className='company__user_worker'>Worker</div>\n                        }\n                        \n                    </div>\n                </Fragment>\n                )}\n            </div>\n            {isAddAccount && <AddUser close={() =>{setIsAddAccount(false)}}/>}\n        </div> \n        }\n    </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}