{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/git/reactapp/src/components/algorithmList.jsx\";\nimport { AiOutlineRight } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlgorithmList = _ref => {\n  let {\n    algorithmList,\n    algorithmCount,\n    setSelectType,\n    camerasSafety_Control_Ear_protection,\n    camerasStaff_control,\n    camerasTool_control,\n    algorithmPage\n  } = _ref;\n  const pushTheButton = algorithm => {\n    if (algorithmPage === 'main') {\n      if (algorithm === 'cameras_safety_control_ear_protection') {\n        setSelectType({\n          obj: camerasSafety_Control_Ear_protection,\n          type: 'camerasSafety_Control_Ear_protection'\n        });\n      }\n      if (algorithm === 'camerasStaff_control') {\n        setSelectType({\n          obj: camerasStaff_control,\n          type: 'camerasStaff_control'\n        });\n      }\n      if (algorithm === 'camerasTool_control') {\n        setSelectType({\n          obj: camerasTool_control,\n          type: 'camerasTool_control'\n        });\n      }\n      return;\n    }\n    if (algorithmPage === 'algorithm') {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"selection__title\",\n      children: \"Initial Setup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"selection__subtitle\",\n      children: \"Select algorithms and cameras that will use them to start monitoring. You can always change your setup by going to the specific algorithms from Algorithms tab.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [algorithmCount, \" / 5 algorithms used \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Ear_protection ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => pushTheButton('camerasSafety_Control_Ear_protection'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Ear protection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing protective headphones.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Staff_Control ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => pushTheButton(\"camerasStaff_control\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Staff Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is staff.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Tool_Control ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => pushTheButton(\"camerasTool_control\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Tool Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects when worker takes tools from the bench.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Head_protection ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Safety_Control_Head_protection'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Head protection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing protective helmet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Hand_protection ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Safety_Control_Hand_protection'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Hand protection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing protective gloves.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Safety_Control_Reflective_jacket ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Safety_Control_Reflective_jacket'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Safety Control: Reflective jacket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is not wearing reflective jacket.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: algorithmList.Idle_Control ? 'selection__container' : 'selection__container noAccess',\n      onClick: () => setSelectType('Idle_Control'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Idle Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Detects if worker is idle.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = AlgorithmList;\nvar _c;\n$RefreshReg$(_c, \"AlgorithmList\");","map":{"version":3,"names":["AiOutlineRight","AlgorithmList","algorithmList","algorithmCount","setSelectType","camerasSafety_Control_Ear_protection","camerasStaff_control","camerasTool_control","algorithmPage","pushTheButton","algorithm","obj","type","Safety_Control_Ear_protection","Staff_Control","Tool_Control","Safety_Control_Head_protection","Safety_Control_Hand_protection","Safety_Control_Reflective_jacket","Idle_Control"],"sources":["/Users/user/Desktop/git/reactapp/src/components/algorithmList.jsx"],"sourcesContent":["import {AiOutlineRight } from \"react-icons/ai\";\n\nexport const AlgorithmList = ({algorithmList, algorithmCount, setSelectType, camerasSafety_Control_Ear_protection, camerasStaff_control, camerasTool_control, algorithmPage}) =>{\n    \n    const pushTheButton = (algorithm) =>{\n        if (algorithmPage === 'main'){\n\n            if (algorithm === 'cameras_safety_control_ear_protection'){\n                setSelectType({obj:camerasSafety_Control_Ear_protection, type:'camerasSafety_Control_Ear_protection'})\n            }\n            if (algorithm === 'camerasStaff_control'){\n                setSelectType({obj:camerasStaff_control, type:'camerasStaff_control'})\n            }\n            if (algorithm === 'camerasTool_control'){\n                setSelectType({obj:camerasTool_control, type:'camerasTool_control'})\n            }\n            return\n        }\n\n        if (algorithmPage === 'algorithm'){\n            \n            return\n         }\n}\n    return (\n        <div className='selection'>\n            <h2 className='selection__title'>Initial Setup</h2>\n            <h3 className='selection__subtitle'>Select algorithms and cameras that will use them to start monitoring. You can always change your setup by going to the specific algorithms from Algorithms tab.</h3>\n            <h2>{algorithmCount} / 5 algorithms used </h2>\n            <div \n                className={algorithmList.Safety_Control_Ear_protection ? 'selection__container' : 'selection__container noAccess'} \n                onClick={() => pushTheButton('camerasSafety_Control_Ear_protection')}\n            >\n                <div>\n                    <h4>Safety Control: Ear protection</h4>\n                    <h5>Detects if worker is not wearing protective headphones.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n            <div \n                className={algorithmList.Staff_Control ? 'selection__container' : 'selection__container noAccess'} \n                onClick={() => pushTheButton(\"camerasStaff_control\")}>\n                <div>\n                    <h4>Staff Control</h4>\n                    <h5>Detects if worker is staff.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n            <div \n                className={algorithmList.Tool_Control ? 'selection__container' : 'selection__container noAccess'} \n                onClick={() => pushTheButton(\"camerasTool_control\")}>\n                <div>\n                    <h4>Tool Control</h4>\n                    <h5>Detects when worker takes tools from the bench.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n            <div className={algorithmList.Safety_Control_Head_protection ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Safety_Control_Head_protection')}>\n                <div>\n                    <h4>Safety Control: Head protection</h4>\n                    <h5>Detects if worker is not wearing protective helmet.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n            <div className={algorithmList.Safety_Control_Hand_protection ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Safety_Control_Hand_protection')}>\n                <div>\n                    <h4>Safety Control: Hand protection</h4>\n                    <h5>Detects if worker is not wearing protective gloves.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n            <div className={algorithmList.Safety_Control_Reflective_jacket ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Safety_Control_Reflective_jacket')}>\n                <div>\n                    <h4>Safety Control: Reflective jacket</h4>\n                    <h5>Detects if worker is not wearing reflective jacket.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n            <div className={algorithmList.Idle_Control ? 'selection__container' : 'selection__container noAccess'} onClick={() => setSelectType('Idle_Control')}>\n                <div>\n                    <h4>Idle Control</h4>\n                    <h5>Detects if worker is idle.</h5>\n                </div>\n                <AiOutlineRight/>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}